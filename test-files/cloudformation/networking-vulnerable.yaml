AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template with networking security vulnerabilities'

Parameters:
  VpcCidr:
    Type: String
    Default: '10.0.0.0/16'
    Description: 'CIDR block for the VPC'
  
  PublicSubnetCidr:
    Type: String
    Default: '10.0.1.0/24'
    Description: 'CIDR block for the public subnet'
  
  PrivateSubnetCidr:
    Type: String
    Default: '10.0.2.0/24'
    Description: 'CIDR block for the private subnet'

Resources:
  # Issue: VPC without proper DNS configuration
  VulnerableVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      # Issue: No specific tenancy specified
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: 'Vulnerable-VPC'
        - Key: Environment
          Value: 'production'
        # Issue: Sensitive information in tags
        - Key: AdminPassword
          Value: 'admin123'

  # Issue: Internet Gateway attached without proper controls
  VulnerableInternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: 'Vulnerable-IGW'

  VulnerableInternetGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VulnerableVPC
      InternetGatewayId: !Ref VulnerableInternetGateway

  # Issue: Public subnet with auto-assign public IP
  VulnerablePublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VulnerableVPC
      CidrBlock: !Ref PublicSubnetCidr
      AvailabilityZone: !Select [0, !GetAZs '']
      # Issue: Auto-assign public IP enabled
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: 'Vulnerable-Public-Subnet'
        - Key: Type
          Value: 'Public'

  # Issue: Private subnet but with route to internet
  VulnerablePrivateSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VulnerableVPC
      CidrBlock: !Ref PrivateSubnetCidr
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: 'Vulnerable-Private-Subnet'
        - Key: Type
          Value: 'Private'

  # Issue: Route table with overly permissive routes
  VulnerablePublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VulnerableVPC
      Tags:
        - Key: Name
          Value: 'Vulnerable-Public-RouteTable'

  VulnerablePrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VulnerableVPC
      Tags:
        - Key: Name
          Value: 'Vulnerable-Private-RouteTable'

  # Issue: Default route to internet gateway
  VulnerablePublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: VulnerableInternetGatewayAttachment
    Properties:
      RouteTableId: !Ref VulnerablePublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref VulnerableInternetGateway

  # Issue: Private subnet with route to internet (should use NAT)
  VulnerablePrivateRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: VulnerableInternetGatewayAttachment
    Properties:
      RouteTableId: !Ref VulnerablePrivateRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref VulnerableInternetGateway

  VulnerablePublicSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref VulnerablePublicSubnet
      RouteTableId: !Ref VulnerablePublicRouteTable

  VulnerablePrivateSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref VulnerablePrivateSubnet
      RouteTableId: !Ref VulnerablePrivateRouteTable

  # Issue: Security group with overly permissive rules
  VulnerableSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: 'Vulnerable-SecurityGroup'
      GroupDescription: 'Security group with vulnerabilities'
      VpcId: !Ref VulnerableVPC
      SecurityGroupIngress:
        # Issue: SSH from anywhere
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: '0.0.0.0/0'
          Description: 'SSH from anywhere'
        # Issue: HTTP from anywhere
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: '0.0.0.0/0'
          Description: 'HTTP from anywhere'
        # Issue: All database ports open
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: '0.0.0.0/0'
          Description: 'MySQL from anywhere'
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: '0.0.0.0/0'
          Description: 'PostgreSQL from anywhere'
        - IpProtocol: tcp
          FromPort: 1433
          ToPort: 1433
          CidrIp: '0.0.0.0/0'
          Description: 'SQL Server from anywhere'
        # Issue: Redis port open
        - IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
          CidrIp: '0.0.0.0/0'
          Description: 'Redis from anywhere'
        # Issue: MongoDB port open
        - IpProtocol: tcp
          FromPort: 27017
          ToPort: 27017
          CidrIp: '0.0.0.0/0'
          Description: 'MongoDB from anywhere'
        # Issue: All ICMP traffic allowed
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: '0.0.0.0/0'
          Description: 'All ICMP from anywhere'
        # Issue: Wide port range open
        - IpProtocol: tcp
          FromPort: 8000
          ToPort: 9000
          CidrIp: '0.0.0.0/0'
          Description: 'Wide port range from anywhere'
      SecurityGroupEgress:
        # Issue: All outbound traffic allowed
        - IpProtocol: -1
          CidrIp: '0.0.0.0/0'
          Description: 'All outbound traffic'
      Tags:
        - Key: Name
          Value: 'Vulnerable-SecurityGroup'
        - Key: Environment
          Value: 'production'

  # Issue: Network ACL with permissive rules
  VulnerableNetworkAcl:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref VulnerableVPC
      Tags:
        - Key: Name
          Value: 'Vulnerable-NetworkACL'

  # Issue: Inbound rule allowing all traffic
  VulnerableNetworkAclInboundRule:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref VulnerableNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      CidrBlock: '0.0.0.0/0'

  # Issue: Outbound rule allowing all traffic
  VulnerableNetworkAclOutboundRule:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref VulnerableNetworkAcl
      RuleNumber: 100
      Protocol: -1
      Egress: true
      RuleAction: allow
      CidrBlock: '0.0.0.0/0'

  VulnerableSubnetNetworkAclAssociation:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref VulnerablePublicSubnet
      NetworkAclId: !Ref VulnerableNetworkAcl

  # Issue: VPC Flow Logs not enabled
  # VPCFlowLog:
  #   Type: 'AWS::EC2::FlowLog'
  #   Properties:
  #     ResourceType: 'VPC'
  #     ResourceId: !Ref VulnerableVPC
  #     TrafficType: 'ALL'

Outputs:
  VpcId:
    Description: 'ID of the vulnerable VPC'
    Value: !Ref VulnerableVPC
    Export:
      Name: !Sub '${AWS::StackName}-VPC-ID'

  PublicSubnetId:
    Description: 'ID of the public subnet'
    Value: !Ref VulnerablePublicSubnet
    Export:
      Name: !Sub '${AWS::StackName}-Public-Subnet-ID'

  PrivateSubnetId:
    Description: 'ID of the private subnet'
    Value: !Ref VulnerablePrivateSubnet
    Export:
      Name: !Sub '${AWS::StackName}-Private-Subnet-ID'

  SecurityGroupId:
    Description: 'ID of the vulnerable security group'
    Value: !Ref VulnerableSecurityGroup
    Export:
      Name: !Sub '${AWS::StackName}-SecurityGroup-ID'

  # Issue: Outputting sensitive network information
  VpcCidrBlock:
    Description: 'CIDR block of the VPC'
    Value: !GetAtt VulnerableVPC.CidrBlock

  NetworkAclId:
    Description: 'ID of the network ACL'
    Value: !Ref VulnerableNetworkAcl
