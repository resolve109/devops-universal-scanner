# WARNING: This Kubernetes deployment contains intentional security vulnerabilities
# DO NOT USE IN PRODUCTION!

apiVersion: apps/v1
kind: Deployment
metadata:
  name: vulnerable-web-app
  labels:
    app: vulnerable-web
spec:
  replicas: 3
  selector:
    matchLabels:
      app: vulnerable-web
  template:
    metadata:
      labels:
        app: vulnerable-web
    spec:
      # No security context defined
      containers:
      - name: web-app
        image: nginx:1.10  # Outdated vulnerable image
        
        # No security context
        securityContext:
          runAsUser: 0  # Running as root
          allowPrivilegeEscalation: true
          
        # Environment variables with secrets in plain text
        env:
        - name: DATABASE_URL
          value: "mysql://admin:password123@db.example.com:3306/app"
        - name: SECRET_KEY
          value: "super-secret-key-12345"
        - name: API_TOKEN
          value: "tk_live_1234567890abcdef"
          
        # No resource limits
        # resources: {}
        
        # Unnecessary ports exposed
        ports:
        - containerPort: 80
        - containerPort: 443
        - containerPort: 22  # SSH
        - containerPort: 8080
        
        # Liveness and readiness probes missing
        # livenessProbe: {}
        # readinessProbe: {}
        
        # Volume mounts
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
        - name: secret-volume
          mountPath: /etc/secrets
          
      # Volumes with sensitive data
      volumes:
      - name: config-volume
        configMap:
          name: app-config
      - name: secret-volume
        secret:
          secretName: app-secrets
          
      # Service account with excessive permissions
      serviceAccountName: web-app-admin
      
      # Host networking (security risk)
      hostNetwork: false
      
      # No pod security policy
      # securityContext: {}

---
apiVersion: v1
kind: Service
metadata:
  name: vulnerable-web-service
spec:
  type: LoadBalancer  # Exposing to internet
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  - port: 443
    targetPort: 443
    protocol: TCP
  - port: 22
    targetPort: 22
    protocol: TCP
  selector:
    app: vulnerable-web

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
data:
  database_host: "db.example.com"
  database_port: "3306"
  database_name: "production_app"
  admin_email: "admin@example.com"
  debug_mode: "true"
  api_endpoint: "https://api.example.com/v1"

---
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
type: Opaque
data:
  # Base64 encoded secrets (still visible)
  database_password: YWRtaW4xMjM=  # admin123
  api_key: c2stMTIzNDU2Nzg5MGFiY2RlZg==  # sk-1234567890abcdef
  jwt_secret: c3VwZXItc2VjcmV0LWtleS0xMjM0NQ==  # super-secret-key-12345
